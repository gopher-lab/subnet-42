# ========== WALLET CONFIGURATION ==========
# Your coldkey mnemonic phrase
COLDKEY_MNEMONIC=""

# Your hotkey mnemonic phrase
HOTKEY_MNEMONIC=""

# OR, if your wallet is already created / loaded...

#(miners)
WALLET_NAME=""
WALLET_HOTKEY=""

#(validators)
VALIDATOR_WALLET_NAME=""
VALIDATOR_HOTKEY_NAME=""

# ========== NETWORK CONFIGURATION ==========
# Network UID (165 for testnet, 42 for mainnet)
NETUID=165

# Network name (test or finney)
SUBTENSOR_NETWORK=test

# ========== ROLE CONFIGURATION ==========
# Node role (validator or miner)
ROLE=miner

# ========== PORT CONFIGURATION ==========
# Port for the miner service
MINER_PORT=8091

# Port for the validator service
VALIDATOR_PORT=8090

# Port for the VPN service
VPN_PORT=3128

# Port for the TEE service
TEE_PORT=8080

# ========== API CONFIGURATION ==========
# API key to protect /monitor endpoints (for validator)
API_KEY=<your-api-key-here>

# ========== TEE CONFIGURATION ==========
# Update frequency for TEE in seconds
UPDATE_TEE_CADENCE_SECONDS=5

# Set to 1 for simulation mode
OE_SIMULATION=1

# Listen address for TEE service, using the TEE_PORT with ":" prefix
LISTEN_ADDRESS=":${TEE_PORT}"

# Address of the TEE worker (for miner)
MINER_TEE_ADDRESS=https://tee-worker-ip:${TEE_PORT}

# Override the external IP address of the miner node
OVERRIDE_EXTERNAL_IP=""

# Address of the TEE worker (for validator)
TELEMETRY_RESULT_WORKER_ADDRESS=https://alternate-tee-worker-ip:${TEE_PORT}

# ========== TWITTER CONFIGURATION ==========
# Twitter accounts in format "username:password", comma separated
# TWITTER_ACCOUNTS=""

# Twitter API keys in format "api_key", comma separated
# TWITTER_API_KEYS=""

# ========== SYSTEM CONFIGURATION ==========
# Enable debug logging (true/false)
DEBUG=false

# ========== RESOURCE CONFIGURATION ==========
# Resource presets for Docker Compose
# By default, no resource limits are applied (set to 0)
# To enable resource limits, uncomment a section below

# ====== SMALL INSTANCE (2 vCPUs, 8GB RAM) ======
# NEURON_MEMORY_LIMIT=300M
# NEURON_CPU_LIMIT=0.15
# WORKER_MEMORY_LIMIT=6G
# WORKER_CPU_LIMIT=0.5
# VPN_MEMORY_LIMIT=400M
# VPN_CPU_LIMIT=0.15

# ====== MEDIUM INSTANCE (4 vCPUs, 16GB RAM) ======
# NEURON_MEMORY_LIMIT=400M
# NEURON_CPU_LIMIT=0.2
# WORKER_MEMORY_LIMIT=8G
# WORKER_CPU_LIMIT=0.65
# VPN_MEMORY_LIMIT=512M
# VPN_CPU_LIMIT=0.2

# ====== LARGE INSTANCE (8 vCPUs, 32GB RAM) ======
# NEURON_MEMORY_LIMIT=600M
# NEURON_CPU_LIMIT=0.3
# WORKER_MEMORY_LIMIT=12G
# WORKER_CPU_LIMIT=1.0
# VPN_MEMORY_LIMIT=800M
# VPN_CPU_LIMIT=0.3

# ====== MEMORY LIMITS ONLY ======
# Use this if you just want to prevent OOM errors but don't want to limit CPU
# NEURON_MEMORY_LIMIT=400M
# NEURON_CPU_LIMIT=0
# WORKER_MEMORY_LIMIT=8G
# WORKER_CPU_LIMIT=0
# VPN_MEMORY_LIMIT=512M
# VPN_CPU_LIMIT=0

