services:
  neuron:
    profiles: ["miner", "miner-vpn", "validator", "validator-tee"]
    image: masaengineering/subnet-42:latest
    pull_policy: always
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        when:
          variable: BUILD_LOCAL
          value: "true"
    volumes:
      - ${WALLET_PATH:-~/.bittensor}:/root/.bittensor
    deploy:
      resources:
        limits:
          memory: ${NEURON_MEMORY_LIMIT:-0}
          cpus: ${NEURON_CPU_LIMIT:-0}
    ports:
      - "${VALIDATOR_PORT:-8090}:${VALIDATOR_PORT:-8090}"
      - "${MINER_PORT:-8091}:${MINER_PORT:-8091}"
    env_file: .env
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
  
  worker:
    profiles: ["miner", "validator-tee"]
    image: masaengineering/tee-worker:main
    pull_policy: always
    deploy:
      resources:
        limits:
          memory: ${WORKER_MEMORY_LIMIT:-0}
          cpus: ${WORKER_CPU_LIMIT:-0}
    devices:
      - /dev/sgx_enclave
      - /dev/sgx_provision
    network_mode: host
    volumes:
      - ./.env:/home/masa/.env
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  cookie-generator:
    profiles: ["miner-vpn"]
    image: cookie-generator:latest
    build:
      context: .
      dockerfile: Dockerfile.cookies
    volumes:
      - ./.env:/app/.env
      - ./cookies:/app/cookies
    environment:
      - PYTHONUNBUFFERED=1
    restart: "no"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  worker-vpn:
    profiles: ["miner-vpn"]
    image: masaengineering/tee-worker:main
    pull_policy: always
    deploy:
      resources:
        limits:
          memory: ${WORKER_MEMORY_LIMIT:-0}
          cpus: ${WORKER_CPU_LIMIT:-0}
    ports:
      - "${TEE_PORT:-8080}:${TEE_PORT:-8080}"
    environment:
      - http_proxy=http://vpn:${VPN_PORT:-3128}
      - https_proxy=http://vpn:${VPN_PORT:-3128}
    devices:
      - /dev/sgx_enclave
      - /dev/sgx_provision
    volumes:
      - ./.env:/home/masa/.env
      - ./cookies:/home/masa/
    depends_on:
      cookie-generator:
        condition: service_completed_successfully
      vpn:
        condition: service_started
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  vpn:
    profiles: ["miner-vpn"]
    image: ubuntu:22.04
    deploy:
      resources:
        limits:
          memory: ${VPN_MEMORY_LIMIT:-0}
          cpus: ${VPN_CPU_LIMIT:-0}
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    ports:
      - "${VPN_PORT:-3128}:3128"
    volumes:
      - ./config.ovpn:/etc/openvpn/config/config.ovpn
      - ./auth.txt:/etc/openvpn/config/auth.txt
    command: >
      bash -c "apt-get update && 
      apt-get install -y openvpn curl iptables tinyproxy &&
      echo 'net.ipv4.ip_forward=1' > /etc/sysctl.conf &&
      sysctl -p &&
      echo 'Allow 0.0.0.0/0' >> /etc/tinyproxy/tinyproxy.conf &&
      sed -i 's/Port 8888/Port ${VPN_PORT:-3128}/g' /etc/tinyproxy/tinyproxy.conf &&
      service tinyproxy restart &&
      iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE &&
      openvpn --config /etc/openvpn/config/config.ovpn --auth-user-pass /etc/openvpn/config/auth.txt --auth-nocache --verb 3"
    restart: unless-stopped