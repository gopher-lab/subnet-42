services:
  neuron:
    profiles: ["miner", "validator"]
    image: masaengineering/subnet-42:latest
    pull_policy: always
    container_name: ${ROLE:-miner}
    build:
      context: .
      dockerfile: Dockerfile
      x-bake:
        when:
          variable: BUILD_LOCAL
          value: "true"
    ports:
      - "${VALIDATOR_PORT:-8092}:8092"
      - "${MINER_PORT:-8091}:8091"
    environment:
      - ROLE=${ROLE:-miner}
      - WALLET_NAME=${WALLET_NAME:-default}
      - VALIDATOR_WALLET_NAME=${VALIDATOR_WALLET_NAME:-default}
      - SUBTENSOR_NETWORK=${SUBTENSOR_NETWORK:-test}
      - NETUID=${NETUID:-165}
      - AUTO_GENERATE_HOTKEY=${AUTO_GENERATE_HOTKEY}
    env_file: .env
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

worker:
  profiles: ["miner"]
  image: masaengineering/tee-worker:main
  pull_policy: always
  container_name: worker
  ports:
    - "8080:8080"
  environment:
    - ROLE=validator
  devices:
    - /dev/sgx_enclave
    - /dev/sgx_provision
  depends_on:
    - vpn
  volumes:
    - ./.env:/home/masa/.env
    - ./setup-routes.sh:/setup-routes.sh
  entrypoint: >
    /bin/bash -c "/setup-routes.sh & /home/masa/entrypoint.sh"
  logging:
    driver: json-file
    options:
      max-size: "10m"
      max-file: "3"

  vpn:
    profiles: ["miner", "test"]
    image: ubuntu:22.04
    container_name: vpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    volumes:
      - ./expressvpn/config:/etc/openvpn/config
    command: >
      bash -c "apt-get update && 
      apt-get install -y openvpn curl iptables &&
      echo 'net.ipv4.ip_forward=1' > /etc/sysctl.conf &&
      sysctl -p &&
      iptables -t nat -A POSTROUTING -o tun0 -j MASQUERADE &&
      openvpn --config /etc/openvpn/config/expressvpn.ovpn --auth-user-pass /etc/openvpn/config/auth.txt --auth-nocache &
      OPENVPN_PID=$! &&
      sleep 10 &&
      echo 'Creating route to forward worker traffic through VPN...' &&
      IP_ADDRESS=$(hostname -i) &&
      echo 'VPN container IP: '$IP_ADDRESS &&
      echo 'Setting up iptables for container routing...' &&
      iptables -t nat -A PREROUTING -p tcp -m tcp -d $IP_ADDRESS --dport 1234 -j DNAT --to-destination 8.8.8.8:53 &&
      wait $OPENVPN_PID"
    restart: unless-stopped